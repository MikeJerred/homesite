@import "../../styles/variables.less";

body {
    // always show vertical scrollbar to prevent the screen jumping when
    // in the animation due to the leaving view having position: fixed
    overflow-y: scroll;
}

article.default-layout {
    > .ui-view-container {
        position: relative;

        // add padding for the fixed header
        > [ui-view][name="main"] > article {
            background-color: @theme-light-blue;
            padding-top: @header-height;
        }

        > .ui-view-animate {
            transition: all 0.3s ease-in-out;
            overflow: hidden;
            width: 100%;

            &.ng-enter {
            }

            &.ng-leave {
                position: fixed;
                z-index: 500;
                // top will be set to the current scroll position by default-layout.ts

                &.ng-leave-active {
                }
            }

            &:not(.ng-leave):nth-child(1):nth-last-child(2), &:not(.ng-leave):nth-child(2):nth-last-child(1) {
                // this rule applies to a .ui-view-animate which doesn't have .ng-leave, and only when there
                // are two .ui-view-animate elements. This is to solve the problem that ng-leave stays on
                // for longer than ng-enter, otherwise we would just use a simple .ng-enter selector.
                position: absolute;
                z-index: 1000;
                top: auto !important; // ensure that we ignore the value set by default-layout.ts
            }
        }
    }
}